def on_click(self, row, col):
        """Handles player moves."""
        if self.board[row][col] == " ":
            self.board[row][col] = self.player
            self.buttons[row][col].config(text=self.player, state=tk.DISABLED,
                                        fg=self.bright_pink, bg="#FFC0CB" if self.player == "X" else "#FFB6C1")

            if self.check_winner(self.player):
                self.show_winner(self.player)
                return

            self.player = "O" if self.player == "X" else "X"
            self.label.config(text=f"Player {self.player}'s Turn", fg=self.bright_pink)

            if self.mode == "PvAI" and self.player == "O":
                self.ai_move()

    def ai_move(self):
        """AI makes a random move."""
        empty_cells = [(r, c) for r in range(3) for c in range(3) if self.board[r][c] == " "]
        if empty_cells:
            row, col = random.choice(empty_cells)
            self.on_click(row, col)

    def check_winner(self, player):
        """Checks if a player has won."""
        for row in self.board:
            if all(s == player for s in row):
                return True

        for col in range(3):
            if all(self.board[row][col] == player for row in range(3)):
                return True

        if all(self.board[i][i] == player for i in range(3)) or \
           all(self.board[i][2 - i] == player for i in range(3)):
            return True

        if not any(" " in row for row in self.board):  # Check tie
            messagebox.showinfo("Game Over", "It's a Tie!")
            self.reset_board()
            return False

        return False

    def show_winner(self, player):
        """Displays winner message and resets the game."""
        messagebox.showinfo("Game Over", f"Player {player} Wins!")
        self.reset_board()

    def reset_board(self):
        """Resets the game board."""
        self.board = [[" " for _ in range(3)] for _ in range(3)]
        self.player = "X"
        self.label.config(text="Player X's Turn", fg=self.bright_pink)

        for r in range(3):
            for c in range(3):
                self.buttons[r][c].config(text=" ", state=tk.NORMAL, 
                                         fg=self.bright_pink, bg="#FFE4E1")

    def toggle_mode(self):
        """Switches between Player vs Player and Player vs AI."""
        self.mode = "PvAI" if self.mode == "PvP" else "PvP"
        self.mode_btn.config(text=f"Mode: {self.mode}", fg=self.bright_pink)
        self.reset_board()


if name == "__main__":
    root = tk.Tk()
    game = TicTacToe(root)
    root.mainloop()
